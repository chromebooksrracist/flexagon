[meta title:"Flexagon Playground" description:"General tools for exploring flexagons" /]

[Header
  title:"Flexagon Playground"
  subtitle:"General tools for exploring flexagons"
  author:"Scott Sherman"
  authorLink:"http://loki3.com/flex" /]

[var name:"showPageHelp" value:false /]
[Button onClick:` showPageHelp = !showPageHelp `]What is this and how do I use it?[/Button]
[Conditional if:` showPageHelp `]
  These tools simulate *flexagons* and the *flexes* you can use to manipulate them.
  You can also use them to create new flexagons by printing and folding generated strips.

  In order to understand them, you need to understand *flexagons*, some of the variety of *flexes*,
  and terminology like *generating sequences* and *pats*.
  The easiest way to learn this is to go through the [Explorable Flexagons](index.html) book,
  which explains the concepts and introduces you to much of the UI used in this page.
  Alternately, the [Flexagon Theory](../g4g10/Flex-Theory.pdf) paper provides some of the theoretical background.

  The *Flexagon Simulator* allows you to create lots of different types of triangle flexagons,
  experiment with how various flexes modify them, and get the unfolded strip you can use to create a physical model of the flexagon.
[/Conditional]

## Flexagon Simulator

[var name:'flexagonOptions' value:`{structure:true, showIds:true, stats:true, both:true}`/]
[var name:'defaultColors' value:`[0x2E4172, 0x2B803E, 0xAA4439, 0x622870, 0xffff00, 0x553900, 0xdddddd, 0x999999]` /]

[var name:'tempGenerator' value:'St*<<St*' /]
[var name:'doGenerator' value:'St*<<St*' /]
[var name:'tempSearch' value:"F P Sh St T T' T1 T1' T2 T2' T3 T3' V" /]
[var name:'doSearch' value:"F P Sh St T T' T1 T1' T2 T2' T3 T3' V" /]
[var name:'tempPats' value:10 /]
[var name:'doPats' value:10 /]
[var name:'tempAngle1' value:36 /]
[var name:'doAngle1' value:36 /]
[var name:'tempAngle2' value:54 /]
[var name:'doAngle2' value:54 /]
[derived name:'doAngles' value:`[doAngle1, doAngle2]` /]
[var name:'tempSequence' value:'' /]
[var name:'doSequence' value:'' /]
[var name:'doHistory' value:'' /]

[derived name:'doInit' value:`[
  {searchFlexes:doSearch},
  {angles:[doAngle1, doAngle2]},
  {flexAndColor: { flexes: doGenerator, colors: defaultColors }},
  {reverseFlexes: doGenerator},
  {history: 'clear'}
  ]` /]
[var name:'doRunInit' value:false /]
[var name:'theHistory' value:'' /]
[var name:'theError' value:`undefined ` /]
[var name:'theCurrentScript' value:`undefined ` /]
[var name:'displayedScript' value:`undefined ` /]

[Aside]
  [Button onClick:` doRunInit=true; doGenerator=tempGenerator; doSearch=tempSearch; doPats=tempPats; doAngle1=tempAngle1; doAngle2=tempAngle2; `]
    Apply Settings[/Button]  [Display value:theError /]
  [br /]
  Generating sequence:[br/][TextInput value:tempGenerator /]
  [br /]
  Search flexes:[br/][TextInput value:tempSearch /]
  [br /]
  Pats per side:[br/][TextInput value:tempPats /]
  [br /]
  Center angle:[br/][TextInput value:tempAngle1 /]
  [br /]
  Angle 2:[br/][TextInput value:tempAngle2 /]
[/Aside]

[Flexagon width:700 height:400 numPats:doPats initialScript:doInit runInitial:doRunInit flexes:doSequence doHistory:doHistory
  options:flexagonOptions overButton:true error:theError history:theHistory currentScript:theCurrentScript /]

[Button onClick:`doHistory='undo';`]Undo[/Button] [Button onClick:`doHistory='redo';`]Redo[/Button] [Button onClick:`doHistory='reset';`]Reset[/Button]

Flex sequence: [TextInput value:tempSequence /] [Button onClick:`doSequence=tempSequence;`]Apply Sequence[/Button]

Generator: [Display value:doGenerator /]
[br/]
History: [Display value:theHistory /]

[Button onClick:`displayedScript=theCurrentScript;`]Show Current Script[/Button]
[textarea cols:80 rows:10 spellCheck:false value:displayedScript readOnly:true /]


## Unfolded strip:

[var name:'unfoldedContent' value:1 /]
[derived name:'unfoldedOptions' value:`{content:unfoldedContent, captions: [{ text: '*', which: 0 }, { text: '*', which: -1 }]}`/]
[var name:'doUnfoldedScript' value:`undefined ` /]
[var name:'displayUnfoldedScript' value:`undefined ` /]

[Select value:unfoldedContent options:`[
  {value:0, label:"All on one side - use labels that indicate folding order"},
  {value:1, label:"All on one side - use labels that indicate folding order, show leaf ids"},
  {value:4, label:"All on one side - use labels from leaf properties"},
  {value:2, label:"Show front only - use leaf properties"},
  {value:3, label:"Show back only - use leaf properties"},
  ]` /]

[Unfolded width:1000 height:500 numPats:doPats script:doUnfoldedScript generator:doGenerator angles:doAngles options:unfoldedOptions /]

[Button onClick:`doUnfoldedScript=displayUnfoldedScript;`]Use Script[/Button]
[Float position:"right"][Button onClick:`doUnfoldedScript=undefined;`]Use Simulator[/Button][/Float]
[textarea cols:80 rows:10 spellCheck:false value:displayUnfoldedScript placeholder:'enter script' /]


## Explorer

[var name:'exploreDoFull' value:false /]
[var name:'exploreDoOneSide' value:false /]
[var name:'exploreDoCancel' value:false /]
[var name:'exploreDone' value:false /]
[var name:'exploreExplored' value:0 /]
[var name:'exploreFound' value:0 /]
[var name:'exploreError' value:`undefined ` /]
[var name:'exploreGetResults' value:'' /]
[var name:'exploreResults' value:'' /]

[Button onClick:`exploreDoFull=true;`]Explore all[/Button] - [Button onClick:`exploreDoOneSide=true;`]Explore without ^[/Button] - [Button onClick:`exploreDoCancel=true;`]Cancel[/Button] [Display value:exploreError /]
[br/]
Explored [Display value:exploreExplored format:'0' /] states, found [Display value:exploreFound format:'0' /] states
[Explorer doFull:exploreDoFull doOneSide:exploreDoOneSide doCancel:exploreDoCancel
  done:exploreDone explored:exploreExplored found:exploreFound error:exploreError getResults:exploreGetResults results:exploreResults /]

Show for each state: [Button onClick:`exploreGetResults='getStates';`]pat notation[/Button]
[Button onClick:`exploreGetResults='getFlexes';`]all available flexes[/Button]
[br/]
Show DOT: [Button onClick:`exploreGetResults='dotSimple';`]state to state[/Button]
[Button onClick:`exploreGetResults='dotFlexes';`]flexes[/Button]
[Button onClick:`exploreGetResults='dotDirected';`]directed flexes[/Button]
[br/]
[textarea cols:80 rows:30 spellCheck:false value:exploreResults readOnly:true /]
