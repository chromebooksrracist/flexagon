[meta title:"Slot flexes" description:"Flexes that involve sliding leaves through slots" /]

[Header
  title:"Slot flexes"
  subtitle:"Flexes that involve sliding leaves through slots"
  author:"Scott Sherman"
  authorLink:"http://loki3.com/flex" /]

[var name:'flexagonOptions' value:`{structure:true, showIds:false, both:true, stats:true}`/]
[var name:'defaultColors' value:`[0x2E4172, 0x2B803E, 0xAA4439, 0x622870, 0xffff00, 0x553900, 0xdddddd, 0x999999]` /]
[var name:'unfoldedOptions' value:`{content:5}`/]


The class of *slot flexes* all involve sliding leaves through a slot,
which is combined with other moves such as *pocket flexes* and *tuck flexes*.
There are lots of possible ways to combine various moves,
so this chapter will just cover a fraction of what's out there to explore.

The following pairs of slot flexes are *pinch complements* of each other,
meaning that you can pinch between them if the structure of the flexagon supports it.

* `Lh` *slot half flex* and `Lk` *slot pocket flex*
* `Ltf` *slot tuck top front* and `Ltb` *slot tuck top back*
* `Lbf` *slot tuck bottom front* and `Lbb` *slot tuck bottom back*


# Slot half and slot pocket

## Generating sequence: Lh+

[Slides width:426 height:240 pattern:'static/Lh/*.jpg' start:1 end:17 /]

[Aside]
  The *slot half flex* requires 11 leaves.
  You can flex to 8 different arrangements on the minimal Lh flexagon
  by using the following flexes: `T` `T'` `V` `Lh` `Ltb` `Ltb'`.
[/Aside]

[var name:historyLh value:'' /]
[var name:doHistoryLh value:'' /]
[derived name:'initLh' value:`[
  {numPats: 6},
  {searchFlexes: "P Sh T T' V Lh Lh' Lk Lk' Ltf Ltf' Ltb Ltb' Lbf Lbf' Lbb Lbb'"},
  {flexAndColor: { flexes: "Lh+", colors: defaultColors }},
  {history: 'clear'}
  ]` /]

[Flexagon width:700 height:400 numPats:6 initialScript:initLh runInitial:false options:flexagonOptions overButton:true
  history:historyLh doHistory:doHistoryLh /]

[Button onClick:`doHistoryLh='undo';`]Undo[/Button] [Button onClick:`doHistoryLh='redo';`]Redo[/Button] [Button onClick:`doHistoryLh='reset';`]Reset[/Button]
- [Display value:historyLh /]

[Unfolded width:1000 height:500 script:initLh options:unfoldedOptions endText:'Lh+' /]


## Generating sequence: Lk+

[Slides width:426 height:240 pattern:'static/Lk/*.jpg' start:1 end:18 /]

[Aside]
  The *slot pocket flex* requires 12 leaves.
  You can flex to 12 different arrangements on the minimal Lh flexagon
  by using the following flexes: `T` `T'` `Sh` `Lk` `Ltf`.
[/Aside]

[var name:historyLk value:'' /]
[var name:doHistoryLk value:'' /]
[derived name:'initLk' value:`[
  {numPats: 6},
  {searchFlexes: "P Sh T T' V Lh Lh' Lk Lk' Ltf Ltf' Ltb Ltb' Lbf Lbf' Lbb Lbb'"},
  {flexAndColor: { flexes: "Lk+", colors: defaultColors }},
  {history: 'clear'}
  ]` /]

[Flexagon width:700 height:400 numPats:6 initialScript:initLk runInitial:false options:flexagonOptions overButton:true
  history:historyLk doHistory:doHistoryLk /]

[Button onClick:`doHistoryLk='undo';`]Undo[/Button] [Button onClick:`doHistoryLk='redo';`]Redo[/Button] [Button onClick:`doHistoryLk='reset';`]Reset[/Button]
- [Display value:historyLk /]

[var name:unfoldedLk1 value:`{content:5, scale:200, rotation:90, end:5, captions:[{ text: 'Lk+', which: 0 }, { text: 'a', which: -1 }]}` /]
[var name:unfoldedLk2 value:`{content:5, scale:200, rotation:90, start:6, captions:[{ text: 'a', which: 0 }, { text: 'Lk+', which: -1 }]}` /]
[FullWidth]
  [Unfolded width:600 height:400 script:initLk options:unfoldedLk1 /]
  [Unfolded width:600 height:400 script:initLk options:unfoldedLk2 /]
[/FullWidth]


## Generating sequence: Lh+Lk+

[Aside]
  The *slot half flex* and *slot pocket flex* are *pinch complements*.
  After you do the slot, there are two different ways to open the flexagon back up
  if the structure of the flexagon supports it.
  Opening it up one way is the `Lh` and the other is the `Lk`.
  Using a generating sequence of `Lh+Lk+` gives us the necessary structure.

  It's interesting to note that you can pinch flex between these two states.
  Try `Lh < P Lk'` or `Lk < P > P Lh'` to see how this works.
[/Aside]

[var name:historyLhLk value:'' /]
[var name:doHistoryLhLk value:'' /]
[derived name:'initLhLk' value:`[
  {numPats: 6},
  {searchFlexes: "Lh Lh' Lk Lk' P"},
  {flexAndColor: { flexes: "Lh*Lh' Lk*Lk'" , colors: defaultColors } },
  {history: 'clear'}
  ]` /]

[Flexagon width:700 height:400 numPats:6 initialScript:initLhLk runInitial:false options:flexagonOptions overButton:true
  history:historyLhLk doHistory:doHistoryLhLk /]

[Button onClick:`doHistoryLhLk='undo';`]Undo[/Button] [Button onClick:`doHistoryLhLk='redo';`]Redo[/Button] [Button onClick:`doHistoryLhLk='reset';`]Reset[/Button]
- [Display value:historyLhLk /]

[Unfolded width:1000 height:500 script:initLhLk options:unfoldedOptions endText:'Lh+Lk+' /]


[hr /]

# Slot tuck flexes

The *slot tuck* flexes all start out the same way:
slide leaves through a slot till you're looking at a position where you could apply a tuck at the top or the bottom.
Once you do a top or bottom tuck, you can choose to open the flexagon from either the front or back.
This gives you a total of 4 different ways to complete the flex.

* `Ltf`: slot tuck top front
* `Ltb`: slot tuck top back
* `Lbf`: slot tuck bottom front
* `Lbb`: slot tuck bottom back

## Generating sequence: Ltf+

[Slides width:426 height:240 pattern:'static/Ltf/*.jpg' start:1 end:21 /]

[Aside]
  The *slot tuck top front* requires 10 leaves.
  You can switch between two different arrangements using `Ltf` and `Ltf'` on the minimal Ltf flexagon,
  but you can't use any of the other flexes we've discussed.
[/Aside]

[var name:historyLtf value:'' /]
[var name:doHistoryLtf value:'' /]
[derived name:'initLtf' value:`[
  {numPats: 6},
  {searchFlexes: "P Sh T T' V Lh Lh' Lk Lk' Ltf Ltf' Ltb Ltb' Lbf Lbf' Lbb Lbb'"},
  {flexAndColor: { flexes: "Ltf+", colors: defaultColors }},
  {history: 'clear'}
  ]` /]

[Flexagon width:700 height:400 numPats:6 initialScript:initLtf runInitial:false options:flexagonOptions overButton:true
  history:historyLtf doHistory:doHistoryLtf /]

[Button onClick:`doHistoryLtf='undo';`]Undo[/Button] [Button onClick:`doHistoryLtf='redo';`]Redo[/Button] [Button onClick:`doHistoryLtf='reset';`]Reset[/Button]
- [Display value:historyLtf /]

[var name:unfoldedLtf1 value:`{content:5, scale:200, rotation:90, end:5, captions:[{ text: 'Ltf+', which: 0 }, { text: 'a', which: -1 }]}` /]
[var name:unfoldedLtf2 value:`{content:5, scale:200, rotation:90, start:6, captions:[{ text: 'a', which: 0 }, { text: 'Ltf+', which: -1 }]}` /]
[FullWidth]
  [Unfolded width:600 height:400 script:initLtf options:unfoldedLtf1 /]
  [Unfolded width:600 height:400 script:initLtf options:unfoldedLtf2 /]
[/FullWidth]


## Generating sequence: Ltb+

[Slides width:426 height:240 pattern:'static/Ltb/*.jpg' start:1 end:20 /]

[Aside]
  The *slot tuck top back* requires 10 leaves.
  You can switch between two different arrangements using `Ltb` and `Ltb'` on the minimal Ltb flexagon,
  but you can't use any of the other flexes we've discussed.
[/Aside]

[var name:historyLtb value:'' /]
[var name:doHistoryLtb value:'' /]
[derived name:'initLtb' value:`[
  {numPats: 6},
  {searchFlexes: "P Sh T T' V Lh Lh' Lk Lk' Ltf Ltf' Ltb Ltb' Lbf Lbf' Lbb Lbb'"},
  {flexAndColor: { flexes: "Ltb+", colors: defaultColors }},
  {history: 'clear'}
  ]` /]

[Flexagon width:700 height:400 numPats:6 initialScript:initLtb runInitial:false options:flexagonOptions overButton:true
  history:historyLtb doHistory:doHistoryLtb /]

[Button onClick:`doHistoryLtb='undo';`]Undo[/Button] [Button onClick:`doHistoryLtb='redo';`]Redo[/Button] [Button onClick:`doHistoryLtb='reset';`]Reset[/Button]
- [Display value:historyLtb /]

[Unfolded width:1000 height:500 script:initLtb options:unfoldedOptions endText:'Ltb+' /]


## Generating sequence: Ltf+Ltb+

[Aside]
  The *slot tuck top front* and *slot tuck top back* are *pinch complements*.
  After you do the slot and tuck, there are two different ways to open the flexagon back up
  if the structure of the flexagon supports it.
  Opening it up one way is the `Ltf` and the other is the `Ltb`.
  Using a generating sequence of `Ltf+Ltb+` gives us the necessary structure.

  You can pinch flex between these two states.
  Try `Ltf > P < P Ltb'` or `Ltb < P Ltf'` to see how this works.
[/Aside]


[var name:historyLtfLtb value:'' /]
[var name:doHistoryLtfLtb value:'' /]
[derived name:'initLtfLtb' value:`[
  {numPats: 6},
  {searchFlexes: "Ltf Ltf' Ltb Ltb' P"},
  {flexAndColor: { flexes: "Ltf*Ltf' Ltb*Ltb'" , colors: defaultColors } },
  {history: 'clear'}
  ]` /]

[Flexagon width:700 height:400 numPats:6 initialScript:initLtfLtb runInitial:false options:flexagonOptions overButton:true
  history:historyLtfLtb doHistory:doHistoryLtfLtb /]

[Button onClick:`doHistoryLtfLtb='undo';`]Undo[/Button] [Button onClick:`doHistoryLtfLtb='redo';`]Redo[/Button] [Button onClick:`doHistoryLtfLtb='reset';`]Reset[/Button]
- [Display value:historyLtfLtb /]

[Unfolded width:1000 height:500 script:initLtfLtb options:unfoldedOptions endText:'Ltf+Ltb+' /]


[hr /]

## Generating sequence: Lbf+

[Slides width:426 height:240 pattern:'static/Lbf/*.jpg' start:1 end:18 /]

[Aside]
  The *slot tuck bottom front* requires 10 leaves.
  You can flex to 5 different arrangements on the minimal Lh flexagon
  by using the following flexes: `V` `Lbf` `Lbf'`.

  It's also interesting to note that it rearranges the leaves in exactly the same way as `v`,
  but `V` only requires 9 leaves.
[/Aside]

[var name:historyLbf value:'' /]
[var name:doHistoryLbf value:'' /]
[derived name:'initLbf' value:`[
  {numPats: 6},
  {searchFlexes: "P Sh T T' V Lh Lh' Lk Lk' Ltf Ltf' Ltb Ltb' Lbf Lbf' Lbb Lbb'"},
  {flexAndColor: { flexes: "Lbf+", colors: defaultColors }},
  {history: 'clear'}
  ]` /]

[Flexagon width:700 height:400 numPats:6 initialScript:initLbf runInitial:false options:flexagonOptions overButton:true
  history:historyLbf doHistory:doHistoryLbf /]

[Button onClick:`doHistoryLbf='undo';`]Undo[/Button] [Button onClick:`doHistoryLbf='redo';`]Redo[/Button] [Button onClick:`doHistoryLbf='reset';`]Reset[/Button]
- [Display value:historyLbf /]

[Unfolded width:1000 height:500 script:initLbf options:unfoldedOptions endText:'Lbf+' /]


## Generating sequence: Lbb+

[Slides width:426 height:240 pattern:'static/Lbb/*.jpg' start:1 end:21 /]

[Aside]
  The *slot tuck bottom back* requires 11 leaves.
  You can flex to 9 different arrangements on the minimal Lbb flexagon
  by using the following flexes: `P` `T` `T'` `V` `Lbf` `Lbf'` `Lbb` `Lbb'`.

  Notice that the minimal Lbb also supports Lbf, its pinch complement.
  Try `Lbf P < P Lbb'` or `Lbb < P > Lbf'`.
[/Aside]

[var name:historyLbb value:'' /]
[var name:doHistoryLbb value:'' /]
[derived name:'initLbb' value:`[
  {numPats: 6},
  {searchFlexes: "P Sh T T' V Lh Lh' Lk Lk' Ltf Ltf' Ltb Ltb' Lbf Lbf' Lbb Lbb'"},
  {flexAndColor: { flexes: "Lbb+", colors: defaultColors }},
  {history: 'clear'}
  ]` /]

[Flexagon width:700 height:400 numPats:6 initialScript:initLbb runInitial:false options:flexagonOptions overButton:true
  history:historyLbb doHistory:doHistoryLbb /]

[Button onClick:`doHistoryLbb='undo';`]Undo[/Button] [Button onClick:`doHistoryLbb='redo';`]Redo[/Button] [Button onClick:`doHistoryLbb='reset';`]Reset[/Button]
- [Display value:historyLbb /]

[Unfolded width:1000 height:500 script:initLbb options:unfoldedOptions endText:'Lbb+' /]


[hr/]

# Generating sequence: Lh+Lk+Lbb+

[Aside]
  The generating sequence `Lh+Lk+Lbb+` gives you a flexagon that supports all 6 slot flexes we've discussed so far.
  If you combine these with flexes from previous chapters
  (the pinch flex `P`, pyramid shuffle `Sh`, tuck flex `T`, and v-flex `V`),
  there are 117 different configurations.
  You can quickly get lost, so if you try it on a paper model,
  don't be afraid to take the flexagon apart and refold it if you want to restart your explorations.
[/Aside]

[var name:historyLhLkLbb value:'' /]
[var name:doHistoryLhLkLbb value:'' /]
[derived name:'initAll' value:`[
  {numPats: 6},
  {searchFlexes: "P Sh T T' V Lh Lh' Lk Lk' Ltf Ltf' Ltb Ltb' Lbf Lbf' Lbb Lbb'"},
  {flexes: "Lh+ Lk+ Lbb+"},
  {flexAndColor: { flexes: "Lh+ Lk+ Lbb+ Ltb+ Lbf+" , colors: defaultColors } },
  {history: 'clear'}
  ]` /]

[Flexagon width:700 height:400 numPats:6 initialScript:initAll runInitial:false options:flexagonOptions overButton:true
  history:historyLhLkLbb doHistory:doHistoryLhLkLbb /]

[Button onClick:`doHistoryLhLkLbb='undo';`]Undo[/Button] [Button onClick:`doHistoryLhLkLbb='redo';`]Redo[/Button] [Button onClick:`doHistoryLhLkLbb='reset';`]Reset[/Button]
- [Display value:historyLhLkLbb /]

[Unfolded width:1000 height:500 script:initAll options:unfoldedOptions endText:'Lh+Lk+Lbb+' /]
